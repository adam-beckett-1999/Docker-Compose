version: "3.8"
services:
###
  watchtower:
    container_name: Watchtower
    image: containrrr/watchtower:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Bind to local docker socket.
    environment:
      - WATCHTOWER_CLEANUP=true # Remove old/unused images once containers have been updated.
      - WATCHTOWER_INCLUDE_STOPPED=true # Include stopped containers in the update process.
      - WATCHTOWER_REVIVE_STOPPED=false # Do not start updated containers if they were stopped before updating.
      - WATCHTOWER_SCHEDULE=@daily # Check for container updates every 24 hours.
      - WATCHTOWER_NOTIFICATIONS=shoutrrr # Enable notifications via built-in Shoutrrr service.
      - WATCHTOWER_NOTIFICATIONS_LEVEL=info # Notify for all events.
      - WATCHTOWER_NOTIFICATIONS_HOSTNAME=${SERVER_HOSTNAME} # Override the server hostname displayed in the notification.
      - WATCHTOWER_NOTIFICATION_TITLE_TAG=${SERVER_HOSTNAME} # Include the server hostname in the title of the notification.
      - WATCHTOWER_NOTIFICATION_REPORT=true # Use a report notification at update cycle completion rather than individual notifications per service.
      - WATCHTOWER_NOTIFICATION_URL=${WATCHTOWER_NOTIFICATIONS} # Notification URL in the format specified in the Shoutrrr documentation.
      - WATCHTOWER_HTTP_API_METRICS=true # Expose the watchtower API for metrics collection
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_API_TOKEN} # Token for metrics API.
    ports:
      - 8888:8080
    networks:
      - docker-services # Network for Docker specific services providing updates and monitoring/metrics.
###
  docker-socket-proxy:
    container_name: Docker-Socket-Proxy
    image: tecnativa/docker-socket-proxy:latest
    restart: unless-stopped
    privileged: true # Container needs privileged access to expose the docker socket over secure external connection.
    healthcheck:
      test: wget --spider http://localhost:2375/version || exit 1
      interval: "29s"
      timeout: "5s"
      retries: 3
      start_period: "21s"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Bind to local docker socket.
    environment:
      CONTAINERS: 1
    ports:
      - 2375:2375
    networks:
      - docker-services # Network for Docker specific services providing updates and monitoring/metrics.
###
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: Monitoring-CAdvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 9101:8080
    networks:
      - docker-services # Network for Docker specific services providing updates and monitoring/metrics.
###
  node-exporter:
    container_name: Monitoring-Node-Exporter
    image: quay.io/prometheus/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
    command:
      - --path.rootfs=/host
    ports:
      - 9100:9100
    networks:
      - docker-services # Network for Docker specific services providing updates and monitoring/metrics.
###
networks:
  docker-services: # Network for Docker specific services providing updates and monitoring/metrics.
    driver: bridge
