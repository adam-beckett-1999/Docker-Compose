version: "3.8"
services:
###
  traefik:
    container_name: Traefik
    image: traefik:latest
    restart: unless-stopped
    volumes:
      - /mnt/gluster/containers/traefik/:/etc/traefik/ # Location for config files and Letsencrypt Certificates.
    environment:
      - DOCKER_HOST=docker-socket-proxy # Use docker-socket-proxy container for secure access to docker socket rather than /docker.sock.
      - CF_DNS_API_TOKEN=${CF_API_TOKEN} # Cloudflare API key for DNS challenge.
    ports:
      - 80:80 # HTTP
      - 443:443 # HTTPS
      - 8080:8080 # Traefik Dashboard
    networks:
      - proxy # Docker network for Traefik to watch for container labels.
    labels:
      - traefik.http.routers.api.rule=Host(`traefik.hyvecloud.dev`) # Domain for Traefik Dashboard.
      - traefik.http.routers.api.entryPoints=https # Entrypoint for Traefik Dashboard.
      - traefik.http.routers.api.service=api@internal # Enable Traefik API.
      - traefik.enable=true # Enable Traefik reverse proxy for the Traefik Dashboard.
  traefik_redis:
    container_name: Traefik-REDIS
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    networks:
      - proxy # Docker network for Traefik to watch for container labels.
###
  authentik_server:
    container_name: Authentik-Server
    image: ghcr.io/goauthentik/server:latest
    restart: unless-stopped
    command: server # Start container with server configuration.
    environment:
      - AUTHENTIK_REDIS__HOST=authentik_redis # REDIS server hostname (depends on).
      - AUTHENTIK_POSTGRESQL__HOST=authentik_db # Postgres server hostname (depends on).
      - AUTHENTIK_POSTGRESQL__USER=authentik # Database user.
      - AUTHENTIK_POSTGRESQL__NAME=authentik # Database name.
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD} # Database user password (secured with Variable/Secret).
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY} # Secret key for Authentik cookie signing and user IDs (secured with Variable/Secret).
    volumes:
      - /mnt/gluster/containers/authentik/media:/media # Location for media content like branding and styling for Authentik service pages.
      - /mnt/gluster/containers/authentik/custom-templates:/templates
    ports:
      - 9000:9000 # Access port for Authentik server, exposed only with HTTP.
    labels:
      - traefik.enable=true # Enable Traefik reverse proxy for the Authentik server.
      # Standard HTTP router to Authentik server.
      - traefik.http.routers.authentik-rtr.rule=Host(`auth.hyvecloud.dev`) # Domain for Authentik server.
      - traefik.http.routers.authentik-rtr.entryPoints=https # Entrypoint for Authentik server.
      # Individual application forwardAuth regex (catch any subdomain using individual application forwardAuth).
      - traefik.http.routers.authentik-rtr-outpost.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.hyvecloud.dev`) && PathPrefix(`/outpost.goauthentik.io/`) # adds the Authentik outpost path to any services configured for authentication.
      - traefik.http.routers.authentik-rtr-outpost.entrypoints=https
    networks:
      - proxy # Docker network for Traefik to watch for container labels.
      - authentik # Authentik service docker network.
    depends_on:
      - authentik_db
      - authentik_redis
  authentik_worker:
    container_name: Authentik-Worker
    image: ghcr.io/goauthentik/server:latest
    restart: unless-stopped
    command: worker # Start container with worker configuration.
    environment:
      - AUTHENTIK_REDIS__HOST=authentik_redis # REDIS server hostname (depends on).
      - AUTHENTIK_POSTGRESQL__HOST=authentik_db # Postgres server hostname (depends on).
      - AUTHENTIK_POSTGRESQL__USER=authentik # Database user.
      - AUTHENTIK_POSTGRESQL__NAME=authentik # Database name.
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD} # Database user password (secured with Variable/Secret).
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY} # Secret key for Authentik cookie signing and user IDs (secured with Variable/Secret).
    user: root
    volumes:
      - /mnt/gluster/containers/authentik/media:/media # Location for media content like branding and styling for Authentik service pages.
      - /mnt/gluster/containers/authentik/certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/gluster/containers/authentik/custom-templates:/templates
    networks:
      - proxy # Docker network for Traefik to watch for container labels.
      - authentik # Authentik service docker network.
    depends_on:
      - authentik_db
      - authentik_redis
  authentik_db:
    container_name: Authentik-DB
    image: postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - /mnt/gluster/containers/authentik/db:/var/lib/postgresql/data
    environment:
      - PUID=1000
      - PGID=1000
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} # Database user password (secured with Variable/Secret).
      - POSTGRES_USER=authentik # Database user.
      - POSTGRES_DB=authentik # Database name.
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY} # Secret key for Authentik cookie signing and user IDs (secured with Variable/Secret).
    networks:
      - proxy # Docker network for Traefik to watch for container labels.
      - authentik # Authentik service docker network.
  authentik_redis:
    container_name: Authentik-REDIS
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    networks:
      - proxy # Docker network for Traefik to watch for container labels.
      - authentik # Authentik service docker network.
###
networks:
  proxy: # Docker network for Traefik to watch for container labels.
    driver: bridge
    external: true
  authentik: # Authentik service docker network.