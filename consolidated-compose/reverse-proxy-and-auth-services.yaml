version: "3.3"
services:
###
  traefik:
    container_name: Traefik
    image: traefik:latest
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/gluster/containers/traefik/:/etc/traefik/
    networks:
      - proxy
    command:
      - "--api"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
    labels:
      - traefik.http.routers.api.rule=Host(`traefik.hyvecloud.dev`)
      - traefik.http.routers.api.entryPoints=https
      - traefik.http.routers.api.service=api@internal
      - traefik.enable=true
    environment:
      - CF_DNS_API_TOKEN=${CF_API_TOKEN}
###
  authentik_db:
    container_name: Authentik-DB
    image: postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - /mnt/gluster/containers/authentik/db:/var/lib/postgresql/data
    environment:
      - PUID=1000
      - PGID=1000
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=authentik
      - POSTGRES_DB=authentik
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
    networks:
      - proxy
  authentik_redis:
    container_name: Authentik-REDIS
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    networks:
      - proxy
  authentik_server:
    container_name: Authentik-Server
    image: ghcr.io/goauthentik/server:latest
    restart: unless-stopped
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=authentik_redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik_db
      - AUTHENTIK_POSTGRESQL__USER=authentik
      - AUTHENTIK_POSTGRESQL__NAME=authentik
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
    volumes:
      - /mnt/gluster/containers/authentik/media:/media
      - /mnt/gluster/containers/authentik/custom-templates:/templates
    ports:
      - 9000:9000
    labels:
      - traefik.enable=true
      - traefik.http.routers.authentik-rtr.rule=Host(`auth.hyvecloud.dev`)
      - traefik.http.routers.authentik-rtr.entryPoints=https
      - traefik.http.routers.authentik-rtr.tls=true
      - traefik.http.routers.authentik-rtr.tls.certresolver=le
      - traefik.http.routers.authentik-rtr-outpost.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.hyvecloud.dev`) && PathPrefix(`/outpost.goauthentik.io/`)
      - traefik.http.routers.authentik-rtr-outpost.entrypoints=https
      - traefik.http.routers.authentik-rtr-outpost.tls=true
      - traefik.http.routers.authentik-rtr-outpost.tls.certresolver=le
      - traefik.http.routers.authentik-rtr.service=authentik-svc
      - traefik.http.services.authentik-svc.loadBalancer.server.port=9000
    networks:
      - proxy
    depends_on:
      - authentik_db
      - authentik_redis
  authentik_worker:
    container_name: Authentik-Worker
    image: ghcr.io/goauthentik/server:latest
    restart: unless-stopped
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST=authentik_redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik_db
      - AUTHENTIK_POSTGRESQL__USER=authentik
      - AUTHENTIK_POSTGRESQL__NAME=authentik
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
    user: root
    volumes:
      - /mnt/gluster/containers/authentik/media:/media
      - /mnt/gluster/containers/authentik/certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/gluster/containers/authentik/custom-templates:/templates
    networks:
      - proxy
    depends_on:
      - authentik_db
      - authentik_redis
###
networks:
  proxy:
    driver: bridge
    external: true