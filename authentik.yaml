version: '3.4'
services:
  authentik_db:
    image: postgres:12-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER:-authentik}
      POSTGRES_DB: ${POSTGRES_DB:-authentik}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    env_file:
      - .env
    labels:
      - io.portainer.accesscontrol.public
  authentik_redis:
    image: redis:alpine
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    labels:
      - io.portainer.accesscontrol.public
  authentik_server:
    image: ghcr.io/goauthentik/server:latest
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: authentik_redis
      AUTHENTIK_POSTGRESQL__HOST: authentik_db
      AUTHENTIK_POSTGRESQL__USER: ${POSTGRES_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${POSTGRES_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    env_file:
      - .env
    volumes:
      - /mnt/gluster/containers/authentik/media:/media
      - /mnt/gluster/containers/authentik/custom-templates:/templates
    ports:
      - "${AUTHENTIK_PORT_HTTP:-10000}:9000"
      - "${AUTHENTIK_PORT_HTTPS:-10443}:9443"
    depends_on:
      - authentik_db
      - authentik_redis
    labels:
      - io.portainer.accesscontrol.public
  authentik_worker:
    image: ghcr.io/goauthentik/server:latest
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: authentik_redis
      AUTHENTIK_POSTGRESQL__HOST: authentik_db
      AUTHENTIK_POSTGRESQL__USER: ${POSTGRES_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${POSTGRES_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    env_file:
      - .env
    user: root
    volumes:
      - /mnt/gluster/containers/authentik/media:/media
      - /mnt/gluster/containers/authentik/certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/gluster/containers/authentik/custom-templates:/templates
    depends_on:
      - authentik_db
      - authentik_redis
    labels:
      - io.portainer.accesscontrol.public
volumes:
  database:
    driver: local
