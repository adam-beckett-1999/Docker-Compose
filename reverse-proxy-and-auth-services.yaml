version: "3.8"
services:
###
  nginx-proxy-manager:
    container_name: NGINX-Proxy-Manager
    image: jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/usr/bin/check-health"]
      interval: 10s
      timeout: 3s
    volumes:
      - /mnt/gluster/containers/nginx-proxy-manager/:/data # Location for config files.
      - /mnt/gluster/containers/nginx-proxy-manager/certificates/:/etc/letsencrypt # Location for Letsencrypt Certificates.
    environment:
      - DISABLE_IPV6=true
      - X_FRAME_OPTIONS=sameorigin
    ports:
      - 80:80 # HTTP
      - 443:443 # HTTPS
      - 81:81 # NGINX-Proxy-Manager Dashboard
    networks:
      - nginx-proxy # Docker network for Traefik to watch for container labels.
###
  goaccess-npm:
    container_name: Goaccess-NPM
    image: xavierh/goaccess-for-nginxproxymanager:latest
    restart: unless-stopped
    ports:
      - 7880:7880 # Port for Goaccess metrics page.
    environment:
      - TZ=Europe/London      
      - EXCLUDE_IPS=127.0.0.1,192.168.0.0/16 # Comma delimited list of IPs to exclude from logging metrics.
      - HTML_REFRESH=5 # Refresh the HTML report every X seconds.
      - KEEP_LAST=30 # Keep the last specified number of days in storage.
      - PROCESSING_THREADS=2
    volumes:
      - /mnt/gluster/containers/nginx-proxy-manager/logs:/opt/log
    networks:
      - nginx-proxy
###
  authentik_server:
    container_name: Authentik-Server
    image: ghcr.io/goauthentik/server:latest
    restart: unless-stopped
    command: server # Start container with server configuration.
    environment:
      - AUTHENTIK_REDIS__HOST=authentik_redis # REDIS server hostname (depends on).
      - AUTHENTIK_POSTGRESQL__HOST=authentik_db # Postgres server hostname (depends on).
      - AUTHENTIK_POSTGRESQL__USER=${AUTHENTIK_DB_USER} # Database user (secured with Variable/Secret).
      - AUTHENTIK_POSTGRESQL__NAME=authentik # Database name.
      - AUTHENTIK_POSTGRESQL__PASSWORD=${AUTHENTIK_DB_PASSWORD} # Database user password (secured with Variable/Secret).
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY} # Secret key for Authentik cookie signing and user IDs (secured with Variable/Secret).
    volumes:
      - /mnt/gluster/containers/authentik/media:/media # Location for media content like branding and styling for Authentik service pages.
      - /mnt/gluster/containers/authentik/custom-templates:/templates
    ports:
      - 9000:9000 # Access port for Authentik server, exposed only with HTTP.
    networks:
      - nginx-proxy # NGINX-Proxy-Manager service docker network.
      - authentik # Authentik service docker network.
    depends_on:
      - authentik_db
      - authentik_redis
  authentik_worker:
    container_name: Authentik-Worker
    image: ghcr.io/goauthentik/server:latest
    restart: unless-stopped
    command: worker # Start container with worker configuration.
    environment:
      - AUTHENTIK_REDIS__HOST=authentik_redis # REDIS server hostname (depends on).
      - AUTHENTIK_POSTGRESQL__HOST=authentik_db # Postgres server hostname (depends on).
      - AUTHENTIK_POSTGRESQL__USER=${AUTHENTIK_DB_USER} # Database user (secured with Variable/Secret).
      - AUTHENTIK_POSTGRESQL__NAME=authentik # Database name.
      - AUTHENTIK_POSTGRESQL__PASSWORD=${AUTHENTIK_DB_PASSWORD} # Database user password (secured with Variable/Secret).
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY} # Secret key for Authentik cookie signing and user IDs (secured with Variable/Secret).
    user: root
    volumes:
      - /mnt/gluster/containers/authentik/media:/media # Location for media content like branding and styling for Authentik service pages.
      - /mnt/gluster/containers/authentik/certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/gluster/containers/authentik/custom-templates:/templates
    networks:
      - authentik # Authentik service docker network.
    depends_on:
      - authentik_db
      - authentik_redis
  authentik_db:
    container_name: Authentik-DB
    image: postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${AUTHENTIK_DB_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - /mnt/gluster/containers/authentik/db:/var/lib/postgresql/data
    environment:
      - PUID=1000
      - PGID=1000
      - POSTGRES_PASSWORD=${AUTHENTIK_DB_PASSWORD} # Database user password (secured with Variable/Secret).
      - POSTGRES_USER=${AUTHENTIK_DB_USER} # Database user (secured with Variable/Secret).
      - POSTGRES_DB=authentik # Database name.
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY} # Secret key for Authentik cookie signing and user IDs (secured with Variable/Secret).
    networks:
      - authentik # Authentik service docker network.
  authentik_redis:
    container_name: Authentik-REDIS
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    networks:
      - authentik # Authentik service docker network.
###
networks:
  nginx-proxy: # NGINX-Proxy-Manager service docker network.
    driver: bridge
  authentik: # Authentik service docker network.
    driver: bridge
